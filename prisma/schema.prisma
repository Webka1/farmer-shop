// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "mysql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// USERS      +  
// SESSIONS   +
// ITEMS      
// CATEGORIES +
// ORDERS     
// CART       

model Users {
  id                Int        @id @default(autoincrement())
  first_name        String
  last_name         String
  phone_number      String
  birthday          DateTime?
  personal_discound Int        @default(0) // 0%
  email             String     @unique
  password          String
  is_banned         Boolean    @default(false)
  is_deleted        Boolean    @default(false)
  created_at        DateTime   @default(now())
  updated_at        DateTime?  @updatedAt
  banned_at         DateTime?  @db.DateTime(0)
  deleted_at        DateTime?  @db.DateTime(0)
  sessions          Sessions[]
  favorited_items   Items[]    @relation("FavoritedItems")
  Orders            Orders[]
  Cart              Cart[]
}

model Sessions {
  id          Int       @id @default(autoincrement())
  ip          String?
  is_active   Boolean
  jwt         String
  user        Users     @relation(fields: [user_id], references: [id], onDelete: NoAction)
  user_id     Int
  user_agent  String?
  finished_at DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime? @updatedAt
}

model Items {
  id            Int        @id @default(autoincrement())
  item_image    String
  item_name     String
  item_price    Int
  item_is_sale  Boolean?   @default(false)
  item_discount Int        @default(0) // 0%
  item_stock    Int
  is_deleted    Boolean    @default(false)
  created_at    DateTime   @default(now())
  updated_at    DateTime?  @updatedAt
  deleted_at    DateTime?  @db.DateTime(0)
  item_category Categories @relation(fields: [category_id], references: [id], onDelete: NoAction)
  category_id   Int
  favorited_by  Users[]    @relation("FavoritedItems")
  order_items   Orders[]   @relation("OrderItems")
  Cart          Cart[]
}

model Categories {
  id            Int       @id @default(autoincrement())
  category_name String
  category_url  String
  is_deleted    Boolean   @default(false)
  created_at    DateTime  @default(now())
  updated_at    DateTime? @updatedAt
  deleted_at    DateTime? @db.DateTime(0)
  items         Items[]
}

model Orders {
  id                Int       @id @default(autoincrement())
  order_number      String
  order_status      String    @default("created")
  order_total_price Int
  order_discount    Int       @default(0) // 0%
  delivery_status   String    @default("created")
  order_note        String?
  is_deleted        Boolean   @default(false)
  created_at        DateTime  @default(now())
  updated_at        DateTime? @updatedAt
  deleted_at        DateTime? @db.DateTime(0)
  order_items       Items[]   @relation("OrderItems")
  user              Users     @relation(fields: [user_id], references: [id], onDelete: NoAction)
  user_id           Int
}

model Cart {
  id         Int       @id @default(autoincrement())
  cart_item  Items     @relation(fields: [item_id], references: [id], onDelete: NoAction)
  quantity   Int
  user       Users     @relation(fields: [user_id], references: [id], onDelete: NoAction)
  item_id    Int
  user_id    Int
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
}
