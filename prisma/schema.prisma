// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "mysql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id                Int        @id @default(autoincrement())
  first_name        String?
  last_name         String?
  phone_number      String?
  birthday          DateTime?
  personal_discound Int        @default(0) // 0%
  email             String     @unique
  password          String
  is_banned         Boolean    @default(false)
  is_deleted        Boolean    @default(false)
  created_at        DateTime   @default(now())
  updated_at        DateTime?  @updatedAt
  banned_at         DateTime?  @db.DateTime(0)
  deleted_at        DateTime?  @db.DateTime(0)
  sessions          Sessions[]
  favorited_items   Items[]    @relation("FavoritedItems")
  Orders            Orders[]
  Delivery          Delivery[]
  Cart              Cart[]
}

model Sessions {
  id          Int       @id @default(autoincrement())
  ip          String?
  is_active   Boolean
  jwt         String?
  user        Users     @relation(fields: [user_id], references: [id], onDelete: NoAction)
  user_id     Int
  user_agent  String?
  finished_at DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime? @updatedAt
}

model Items {
  id                    Int        @id @default(autoincrement())
  item_image            String?
  item_name             String?
  item_price            Int?
  item_description      String?
  item_tech_description Json?
  item_tags             String?
  item_is_sale          Boolean?   @default(false)
  item_discount         Int        @default(0) // 0%
  item_stock            Int?
  is_deleted            Boolean    @default(false)
  created_at            DateTime   @default(now())
  updated_at            DateTime?  @updatedAt
  deleted_at            DateTime?  @db.DateTime(0)
  item_category         Categories @relation(fields: [category_id], references: [id], onDelete: NoAction)
  category_id           Int
  favorited_by          Users[]    @relation("FavoritedItems")
  order_items           Orders[]   @relation("OrderItems")
  cart_items            Cart[]     @relation("CartItems")
}

model Categories {
  id                   Int       @id @default(autoincrement())
  category_name        String?
  category_description String?
  category_image       String?
  category_url         String?
  is_deleted           Boolean   @default(false)
  created_at           DateTime  @default(now())
  updated_at           DateTime? @updatedAt
  deleted_at           DateTime? @db.DateTime(0)
  items                Items[]
}

model Orders {
  id                Int        @id @default(autoincrement())
  order_number      String?
  order_status      String?
  order_total_price Int?
  order_discount    Int        @default(0) // 0%
  order_note        String?
  is_deleted        Boolean    @default(false)
  created_at        DateTime   @default(now())
  updated_at        DateTime?  @updatedAt
  deleted_at        DateTime?  @db.DateTime(0)
  order_items       Items[]    @relation("OrderItems")
  user              Users      @relation(fields: [user_id], references: [id], onDelete: NoAction)
  user_id           Int
  delivery          Delivery[]
}

model Delivery {
  id             Int       @id @default(autoincrement())
  delivery_order Int
  user           Users     @relation(fields: [customer_id], references: [id], onDelete: NoAction)
  customer_id    Int
  order          Orders    @relation(fields: [order_id], references: [id], onDelete: NoAction)
  order_id       Int
  created_at     DateTime  @default(now())
  updated_at     DateTime? @updatedAt

  user_city     String?
  user_address  String?
  user_floor    String? // etazh
  user_flat     String? // kvartira
  user_intercom String?
  user_phone    String?

  delivery_type   String?
  delivery_note   String?
  delivery_status String?
  delivery_price  Int?
}

model Cart {
  id         Int       @id @default(autoincrement())
  cart_items Items[]   @relation("CartItems")
  user       Users     @relation(fields: [user_id], references: [id], onDelete: NoAction)
  user_id    Int
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
}
